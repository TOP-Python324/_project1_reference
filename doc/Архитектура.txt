                Архитектура
                  проекта
            
              Крестики-Нолики


============  РАСПРОСТРАНЕНИЕ  ============

Файлы с кодом Python и файлы данных приложения.
Точка входа — main.py



=============  МОДЕЛЬ ДАННЫХ  =============

 1. Получение данных от пользователя
    
    команды
        
                      начать новую партию : new    : n : начать   : н :
            загрузить существующую партию : load   : l : загрузка : з :
                 отобразить раздел помощи : help   : h : помощь   : п :
      создать или переключиться на игрока : player : p : игрок    : и :
           отобразить таблицу результатов : table  : t : таблица  : т :
                     изменить размер поля : dim    : d : размер   : р :
                                    выйти : quit   : q : выход    : в :
    
    имя пользователя
        
        r'[A-Za-zА-Яа-я]\w*'
    
    размер поля
        
        r'[3-9]|1\d|20'


 2. Структуры данных
    
    база игроков
        
        {
          'имя_игрока_1': { 'побед': 5,
                            'поражений': 3,
                            'ничьих': 10    },
          'имя_игрока_2': { 'побед': 0,
                            'поражений': 0,
                            'ничьих': 0     },
          ...,
        }
    
    база сохранений
        
        выбранная
            
            {
              ('имя_игрока_1', 'имя_игрока_2'): (3, [5, 3, 9]),
              ('имя_игрока_2', 'имя_игрока_1'): (3, [1, 9, 5, 3]),
              ...,
            }
        
        альтернативные
            
            {
              'имя_игрока_1': [
                ('имя_игрока_2', True, 3, [5, 3, 9]),
                ('имя_игрока_2', False, 3, [1, 9, 5, 3]),
                ..., 
              ],
              'имя_игрока_2': [
                ('имя_игрока_1', False, 3, [5, 3, 9]),
                ('имя_игрока_1', True, 3, [1, 9, 5, 3]),
                ..., 
              ],
              ...,
            }
            
            ...
    
    сделанные ходы
        
        выбранная
            
            {5: 'X', 3: 'O', 9: 'X'}
        
        альтернативные
            
            '  O X   X'
            
            [' ', ' ', 'O', ' ', 'X', ' ', ' ', ' ', 'X']
            
            [ [' ', ' ', 'O'],
              [' ', 'X', ' '],
              [' ', ' ', 'X'] ]
            
            [5, 3, 9]
            
            ...


 3. Файлы данных
    
    информация об игроках — players.ini
        
        [имя_игрока_1]
        побед = 5
        поражений = 3
        ничьих = 10
        
        [имя_игрока_2]
        побед = 0
        поражений = 0
        ничьих = 0
        
        ...
    
    сохранённые партиии — saves.txt
        
        имя_игрока_1,имя_игрока_2!3!5,3,9
        имя_игрока_2,имя_игрока_1!3!1,9,5,3
        имя_игрока_3,имя_игрока_1!5!12,0,7,1,17,20
        ...



=====  ПОСЛЕДОВАТЕЛЬНОСТЬ ВЫПОЛНЕНИЯ  =====

1. прочитать файлы данных

2. ЕСЛИ база игроков пустая (первый запуск):
        вывести раздел помощи
   ИНАЧЕ
        вывести список команд

3. запросить имя игрока
   
   ЕСЛИ имя игрока отсутствует в базе игроков:
        создать запись об игроке в базе игроков
        записать базу игроков в файл данных
   
   ЕСЛИ шаг 3
        назначить игрока авторизованным
   
   внести имя игрока в список имён активных игроков
   внести объект функции запроса хода человека в список функций активных игроков

# суперцикл

4. ожидать ввод команды пользователя (главное меню)
   
   =============  new  =============
   
   # настройка партии
   
   5. запросить режим игры
      
      ЕСЛИ один человек
           запросить уровень сложности бота
           внести имя бота в зависимости от уровня сложности в список имён активных игроков
           внести объект функции запроса хода бота в зависимости от уровня сложности в список функций активных игроков
      
      ЕСЛИ два человека
           повторить шаг 3
      
      запросить очерёдность ходов
      привести порядок элементов в списках активных игроков с соответствие с порядком элементов в кортеже токенов
   
   6. вывести игровое поле с номерами ячеек
   
   # игровой процесс — цикл до максимального количества ячеек на поле текущего размера
       
       7. запросить ход человека
          
          ЕСЛИ ввод пустой:
               сохранить текущее состояние партии
               записать базу сохранений в файл данных
               перейти к шагу 4
       
       ИЛИ
       
       7. вычислить ход бота
       
       8. внести номер ячейки и соответствующий токен в словарь сделанных ходов
       
       9. вывести в stdout игровое поле со сделанными ходами
       
       10. проверить наличие победных комбинаций
           
           ЕСЛИ нет победной комбинации:
                перейти к шагу 7
           
           ЕСЛИ есть победная комбинация:
                перейти к шагу 11
   
   11. обновить статистику активных игроков в базе игроков
       записать базу игроков в файл данных
       перейти к шагу 4



===========  СТРУКТУРА МОДУЛЕЙ  ===========

main.py — точка входа: управляющий код верхнего уровня

data.py — глобальные переменные
utils.py — вспомогательные функции

help.py — раздел помощи
player.py — взаимодействие с игроком
game.py — игровой процесс
bot.py — вычисление хода бота


